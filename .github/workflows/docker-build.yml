name: Build and Push Docker Compose Services

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  # Default environment variables
  PORT: 8080
  APP_ENV: production
  BLUEPRINT_DB_URL: ./words.db

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push lang-portal services
        run: |
          cd lang-portal
          # Create empty .env file from .env.example if it exists
          if [ -f .env.example ]; then
            touch .env
          fi
          docker compose build
          docker compose push

      - name: Build and push agent services
        run: |
          cd agent
          # Create empty .env file from .env.example if it exists
          if [ -f .env.example ]; then
            touch .env
          fi
          docker compose build
          docker compose push

      - name: Build and push writing-practice services
        run: |
          cd writing-practice
          # Create empty .env file from .env.example if it exists
          if [ -f .env.example ]; then
            touch .env
          fi
          docker compose build
          docker compose push

      - name: Build and push vocab-importer services
        run: |
          cd vocab-importer
          # Create empty .env file from .env.example if it exists
          if [ -f .env.example ]; then
            touch .env
          fi
          docker compose build
          docker compose push

      - name: Build and push video-translation services
        run: |
          cd video-translation
          # Create empty .env file from .env.example if it exists
          if [ -f .env.example ]; then
            touch .env 
          fi
          docker compose build
          docker compose push

      - name: Build and push listening-comp services
        run: |
          cd listening-comp
          # Create empty .env file from .env.example if it exists
          if [ -f .env.example ]; then
            touch .env
          fi
          docker compose build
          docker compose push

      - name: Build and push speech services
        run: |
          cd speach
          # Create empty .env file from .env.example if it exists
          if [ -f .env.example ]; then
            touch .env
          fi
          docker compose build
          docker compose push
